{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n/**\n * Hook for handling closing when clicking outside of an element\n * @param {React.node} el\n * @param {boolean} initialState\n */\n\nexport const useDetectOutsideClick = (el, initialState) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(initialState);\n  useEffect(() => {\n    const onClick = e => {\n      // If the active element exists and is clicked outside of\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(!isActive);\n      }\n    }; // If the item is active (ie open) then listen for clicks outside\n\n\n    if (isActive) {\n      window.addEventListener(\"click\", onClick);\n    }\n\n    return () => {\n      window.removeEventListener(\"click\", onClick);\n    };\n  }, [isActive, el]);\n  return [isActive, setIsActive];\n};\n\n_s(useDetectOutsideClick, \"7d0JcqjDGyovxI7QMH5TdPc9RDA=\");","map":{"version":3,"sources":["/Users/kevintomas/Desktop/react_js_projects/BetSmarter/src/components/useDetectOutsideClick.js"],"names":["useState","useEffect","useDetectOutsideClick","el","initialState","isActive","setIsActive","onClick","e","current","contains","target","window","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,YAAL,KAAsB;AAAA;;AACzD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACI,YAAD,CAAxC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,OAAO,GAAGC,CAAC,IAAI;AACnB;AACA,UAAIL,EAAE,CAACM,OAAH,KAAe,IAAf,IAAuB,CAACN,EAAE,CAACM,OAAH,CAAWC,QAAX,CAAoBF,CAAC,CAACG,MAAtB,CAA5B,EAA2D;AACzDL,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;AACF,KALD,CADc,CAQd;;;AACA,QAAIA,QAAJ,EAAc;AACZO,MAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCN,OAAjC;AACD;;AAED,WAAO,MAAM;AACXK,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCP,OAApC;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACF,QAAD,EAAWF,EAAX,CAhBM,CAAT;AAkBA,SAAO,CAACE,QAAD,EAAWC,WAAX,CAAP;AACD,CAtBM;;GAAMJ,qB","sourcesContent":["import { useState, useEffect } from \"react\";\n\n/**\n * Hook for handling closing when clicking outside of an element\n * @param {React.node} el\n * @param {boolean} initialState\n */\nexport const useDetectOutsideClick = (el, initialState) => {\n  const [isActive, setIsActive] = useState(initialState);\n\n  useEffect(() => {\n    const onClick = e => {\n      // If the active element exists and is clicked outside of\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(!isActive);\n      }\n    };\n\n    // If the item is active (ie open) then listen for clicks outside\n    if (isActive) {\n      window.addEventListener(\"click\", onClick);\n    }\n\n    return () => {\n      window.removeEventListener(\"click\", onClick);\n    };\n  }, [isActive, el]);\n\n  return [isActive, setIsActive];\n};\n"]},"metadata":{},"sourceType":"module"}